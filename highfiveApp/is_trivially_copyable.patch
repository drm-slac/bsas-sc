diff --git a/include/highfive/bits/H5Converter_misc.hpp b/include/highfive/bits/H5Converter_misc.hpp
index db7f686..1928e6d 100644
--- a/include/highfive/bits/H5Converter_misc.hpp
+++ b/include/highfive/bits/H5Converter_misc.hpp
@@ -178,11 +178,20 @@ struct container_converter {
     const DataSpace& _space;
 };

+// workaround missing "is_trivially_copyable" in g++ < 5.0
+// from: https://stackoverflow.com/questions/25123458/is-trivially-copyable-is-not-a-member-of-std
+// caveat: https://stackoverflow.com/questions/12754886/has-trivial-copy-behaves-differently-in-clang-and-gcc-whos-right
+#if __GNUG__ && __GNUC__ < 5
+#define IS_TRIVIALLY_COPYABLE(T) __has_trivial_copy(T)
+#else
+#define IS_TRIVIALLY_COPYABLE(T) std::is_trivially_copyable<T>::value
+#endif
+

 // apply conversion for continuous vectors
 template <typename T>
 struct data_converter<std::vector<T>,
-                      typename std::enable_if<std::is_trivially_copyable<T>::value>::type>
+                      typename std::enable_if<IS_TRIVIALLY_COPYABLE(T)>::type>
     : public container_converter<std::vector<T>> {
     using container_converter<std::vector<T>>::container_converter;
 };
